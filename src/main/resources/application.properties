spring.application.name=teste-dev-back

#-------> Config Docker via Docker-Compose <---------
spring.datasource.url=jdbc:postgresql://localhost:5432/olihealth
spring.datasource.username=docker
spring.datasource.password=docker
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.sql.init.mode=always

spring.flyway.locations=filesystem:db/migration
#Essa propriedade serve para ativarmos o Flyway / Desativar durante os testes
spring.flyway.enabled=true
#Essa propriedade para criar uma tabela com as migrações e assim ter acesso ao histórico de modificações.
spring.flyway.baseline-on-migrate=true 

# #-----> Docker config <-----
# spring.jpa.database=POSTGRESQL
# spring.datasource.plataform=postgres
# spring.datasource.url=jdbc:postgresql://localhost:5432/olihealth
# spring.datasource.username=docker
# spring.datasource.password=docker

# spring.jpa.show-sql=true
# spring.jpa.generate-ddl=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


#------> H2 Config <-----
# DATASOURCE
# spring.datasource.url=jdbc:h2:mem:~/olihealth
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=

# # H2 Console
# spring.h2.console.path=/h2
# spring.h2.console.enabled=true

# #JPA
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.show-sql=true
# spring.jpa.generate-ddl=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# spring.jpa.defer-datasource-initialization=true
# api.security.token.secret = ${JWT_SECRET:my-secret-key}

## Enable debug logging
debug=true